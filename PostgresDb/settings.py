"""
Django settings for PostgresDb project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import json
import sys
import dj_database_url

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wkb)6bw%0%*k)!o2zi#nh*#p_t#^7$*96npo3*(*apbci)q_(z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'dbbackup',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'PostgresDb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'PostgresDb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'


# ********* postgres variables *****************
POSTGRES_USER = os.environ.get('DB_ENV_POSTGRES_USER', "postgres")
POSTGRES_PASSWORD= os.environ.get('DB_ENV_POSTGRES_PASSWORD', False)
POSTGRES_DB = os.environ.get('DB_ENV_POSTGRES_DB', POSTGRES_USER)
# db host environment DB_PORT_5432_TCP_ADDR
POSTGRES_HOST = os.environ.get('DB_HOST', 'db')
POSTGRES_PORT = os.environ.get('DB_PORT_5432_TCP_PORT')


# ********* STORAGE CONFIGURATION ******************
DBBACKUP_STORAGE = 'dbbackup.storage.dropbox_storage'
DBBACKUP_TOKENS_FILEPATH = os.environ.get('DBBACKUP_TOKENS_FILEPATH')
DBBACKUP_DROPBOX_APP_KEY = os.environ.get('DBBACKUP_DROPBOX_APP_KEY')
DBBACKUP_DROPBOX_APP_SECRET = os.environ.get('DBBACKUP_DROPBOX_APP_SECRET')


# ********** POSTGRES BACKUP COMMAND ***************
command = "pg_restore --verbose --clean --no-acl --no-owner" \
              " -h {host}  -p {port}  -U {username} -d {db_name}"

if POSTGRES_PASSWORD:
        command = 'PGPASSWORD={password} ' + command



# database_url = postgres://postgres:mysecretpassword@db:5432/slash_air'
# postgres://USER:PASSWORD@HOST:PORT/NAME

if not os.environ.get('DATABASE_URL'):
    database_url = "postgres://{USER}:{PASSWORD}@{HOST}:{PORT}/{NAME}".format(
        USER=POSTGRES_USER, PASSWORD=POSTGRES_PASSWORD, PORT=POSTGRES_PORT,
            HOST=POSTGRES_HOST, NAME=POSTGRES_DB
    )
    os.environ['DATABASE_URL'] = database_url


#DBBACKUP_FORCE_ENGINE = 'postgresql_psycopg2'

DBBACKUP_DATABASES = {
    'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
}

#import pdb; pdb.set_trace()


